fullmod_m = lm(fullformula, data=cancer_new_3)
# finalmod_both = step(fullmod, direction = "both", trace = 1)
finalmod_both_m = step(fullmod_m, direction = "both", trace = 0)
summary(finalmod_both_m)
summary(lm(formula = overall_survival_months ~ age_at_diagnosis + chemotherapy +
hormone_therapy + tumor_stage + age_at_diagnosis:chemotherapy +
chemotherapy:tumor_stage + hormone_therapy:tumor_stage + radio_therapy + radio_therapy : tumor_stage + radio_therapy : age_at_diagnosis, data = cancer_new_3))
finalmod_reg = regsubsets(fullformula, data=cancer_new_3, method="exhaustive", nvmax = length(attr(terms(fullformula), "term.labels")))
library(dplyr) # Data manipulation operations
library(tidyverse) # Better presentation of data
library(ggplot2) # Provides commands to create complex plots
# install.packages("fastDummies")
library(fastDummies)
# install.packages('stringi')
library(car) # Applied regression tools, including VIF
# install.packages('gridExtra')
library(gridExtra) # Extensions for grid system
cancer = read.csv("METABRIC_RNA_Mutation.csv", header=TRUE)[,1:31]
cancer_new_1 <- cancer %>%
drop_na(age_at_diagnosis, type_of_breast_surgery, tumor_size, tumor_stage, chemotherapy, hormone_therapy, radio_therapy, overall_survival_months, death_from_cancer) %>%
# filter(!(age_at_diagnosis==""), !(type_of_breast_surgery==""), !(tumor_size==""), !(tumor_stage==""), !(chemotherapy==""), !(hormone_therapy==""), !(radio_therapy==""), !(overall_survival_months==""), !(death_from_cancer==""), cancer_type_detailed == "Breast Invasive Ductal Carcinoma",) %>%
filter(!(age_at_diagnosis==""), !(type_of_breast_surgery==""), !(tumor_size==""), !(tumor_stage==""), !(chemotherapy==""), !(hormone_therapy==""), !(radio_therapy==""), !(overall_survival_months==""), !(death_from_cancer==""), !(death_from_cancer=="Died of Other Causes"), cancer_type_detailed == "Breast Invasive Ductal Carcinoma",) %>%
transform(
type_of_breast_surgery = as.factor(type_of_breast_surgery),
tumor_stage = as.factor(tumor_stage),
chemotherapy = as.factor(chemotherapy),
hormone_therapy = as.factor(hormone_therapy),
radio_therapy = as.factor(radio_therapy),
death_from_cancer = as.factor(death_from_cancer)
) %>%
select(age_at_diagnosis, type_of_breast_surgery, tumor_stage, chemotherapy, hormone_therapy, radio_therapy, death_from_cancer, overall_survival_months)
# !(death_from_cancer=="")
summary(cancer_new_1)
cancer_new <- cancer_new_1 %>%
filter(!(tumor_stage==0), !(tumor_stage==4),)
# %>%
#   select(age_at_diagnosis, type_of_breast_surgery, tumor_stage, chemotherapy, hormone_therapy, radio_therapy, overall_survival_months)
cancer_new$tumor_stage <- relevel(factor(cancer_new$tumor_stage), ref = "1")
cancer_new$death_from_cancer <- relevel(factor(cancer_new$death_from_cancer), ref = "Living")
head(cancer_new, 10)
summary(cancer_new)
reg_start = lm(overall_survival_months~age_at_diagnosis,data=cancer_new)
plot(reg_start$fitted.values, reg_start$residuals, xlab="Fitted Values", ylab="Residuals")
abline(a = 0, b = 0)
lines(lowess(reg_start$fitted.values, reg_start$residuals), col = "blue", lwd = 2)
qqnorm(reg_start$residuals)
qqline(reg_start$residuals)
box_age_type <- cancer_new %>%
ggplot() +
geom_boxplot(aes(type_of_breast_surgery, overall_survival_months, fill = type_of_breast_surgery)) +
theme(
text = element_text(size = 8),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(angle = 45)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for each Breast Surgery",
x = "Breast Surgery",
y = "Overall Survival (Months)",
color = "Breast Surgery") +
stat_summary(aes(type_of_breast_surgery, overall_survival_months, fill = type_of_breast_surgery),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_chemo <- cancer_new %>%
ggplot() +
geom_boxplot(aes(chemotherapy, overall_survival_months, fill = chemotherapy)) +
theme(
text = element_text(size = 8),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
#        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Chemotherapy",
x = "Chemotherapy",
y = "Overall Survival (Months)",
color = "Chemotherapy") +
stat_summary(aes(chemotherapy, overall_survival_months, fill = chemotherapy),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_hormo <- cancer_new %>%
ggplot() +
geom_boxplot(aes(hormone_therapy, overall_survival_months, fill = hormone_therapy)) +
theme(
text = element_text(size = 8),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
#        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Hormone Therapy",
x = "Hormone Therapy",
y = "Overall Survival (Months)",
color = "Hormone Therapy") +
stat_summary(aes(hormone_therapy, overall_survival_months, fill = hormone_therapy),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_radio <- cancer_new %>%
ggplot() +
geom_boxplot(aes(radio_therapy, overall_survival_months, fill = radio_therapy)) +
theme(
text = element_text(size = 8),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
#        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Radio Therapy",
x = "Radio Therapy",
y = "Overall Survival (Months)",
color = "Radio Therapy") +
stat_summary(aes(radio_therapy, overall_survival_months, fill = radio_therapy),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_tumor <- cancer_new %>%
ggplot() +
geom_boxplot(aes(tumor_stage, overall_survival_months, fill = tumor_stage)) +
theme(
text = element_text(size = 8),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
#        axis.text.x = element_text(angle = 45)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Tumor Stage",
x = "Tumor Stage",
y = "Overall Survival (Months)",
color = "Tumor Stage") +
stat_summary(aes(tumor_stage, overall_survival_months, fill = tumor_stage),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
box_age_death <- cancer_new %>%
ggplot() +
geom_boxplot(aes(death_from_cancer, overall_survival_months, fill = death_from_cancer)) +
theme(
text = element_text(size = 8),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold"),
axis.text.x = element_text(angle = 45)
) +
ggtitle("Age Comparison") +
labs(title = "Overall Survival for Living Condition",
x = "Living Condition",
y = "Overall Survival (Months)",
color = "Living Condition") +
stat_summary(aes(death_from_cancer, overall_survival_months, fill = death_from_cancer),
fun = mean, colour = "yellow", geom = "point", shape = 18, size = 5
)
grid.arrange(box_age_chemo, box_age_hormo, nrow = 1)
grid.arrange(box_age_radio, box_age_type, nrow = 1)
grid.arrange(box_age_tumor, box_age_death, nrow = 1)
# grid.arrange(box_age_chemo, box_age_hormo, box_age_radio, ncol = 1)
# grid.arrange(box_age_type, box_age_tumor, box_age_death, ncol = 1)
options(repr.plot.width = 20, repr.plot.height = 5)
reg_0 = lm(overall_survival_months~age_at_diagnosis*type_of_breast_surgery,data=cancer_new)  # TODO
summary(reg_0)
plot_age_type <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = type_of_breast_surgery)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Breast Surgery",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Breast Surgery")
reg_1 = lm(overall_survival_months~age_at_diagnosis*chemotherapy,data=cancer_new)  # TODO
summary(reg_1)
plot_age_chemo <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = chemotherapy)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Chemotherapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Chemotherapy")
reg_2 = lm(overall_survival_months~age_at_diagnosis*hormone_therapy,data=cancer_new)  # TODO
summary(reg_2)
plot_age_hormo <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = hormone_therapy)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Hormone Therapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Hormone Therapy")
reg_3 = lm(overall_survival_months~age_at_diagnosis*radio_therapy,data=cancer_new)  # TODO
summary(reg_3)
plot_age_radio <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = radio_therapy)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Radio Therapy",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Radio Therapy")
reg_4 = lm(overall_survival_months~age_at_diagnosis*tumor_stage,data=cancer_new)  # TODO
summary(reg_4)
plot_age_tumor <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = tumor_stage)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Tumor Stage",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Tumor Stage")
# reg_3_1 = lm(overall_survival_months~age_at_diagnosis+radio_therapy,data=cancer_new)  # TODO
# summary(reg_3_1)
# scatterplot(overall_survival_months~age_at_diagnosis+radio_therapy, data=cancer_new, smooth=FALSE, main="Overall Survival against Age and Radio Therapy", xlab="Age (Years)", ylab="Overall Survival (Months)")
reg_5 = lm(overall_survival_months~age_at_diagnosis*death_from_cancer,data=cancer_new)  # TODO
summary(reg_5)
plot_age_death <- ggplot(cancer_new, aes(x = age_at_diagnosis, y = overall_survival_months, color = death_from_cancer)) +
geom_point() +
geom_smooth(method = "lm", na.rm = TRUE) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Living Condition",
x = "Age (Years)",
y = "Overall Survival (Months)",
color = "Living Condition")
# grid.arrange(plot_age_chemo, plot_age_hormo, plot_age_radio)
# grid.arrange(plot_age_type, plot_age_tumor, plot_age_death)
# grid.arrange(plot_age_chemo, plot_age_hormo, nrow = 1)
# grid.arrange(plot_age_radio, plot_age_type, nrow = 1)
# grid.arrange(plot_age_tumor, plot_age_death, nrow = 1)
grid.arrange(plot_age_chemo, plot_age_hormo, ncol = 1)
grid.arrange(plot_age_radio, plot_age_type, ncol = 1)
grid.arrange(plot_age_tumor, plot_age_death, ncol = 1)
# plot_age_chemo
# plot_age_hormo
# plot_age_radio
# plot_age_type
# plot_age_tumor
# plot_age_death
histo_age_type <- ggplot(cancer_new, aes(x = overall_survival_months, y = after_stat(density), fill = type_of_breast_surgery)) +
geom_histogram(alpha=0.5, position="identity", binwidth = 5,) +
# facet_wrap(~location, scales = "fixed", nrow = 5) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Breast Surgery",
x = "Overall Survival (Months)",
y = "Density",
color = "Breast Surgery")
histo_age_chemo <- ggplot(cancer_new, aes(x = overall_survival_months, y = after_stat(density), fill = chemotherapy)) +
geom_histogram(alpha=0.5, position="identity", binwidth = 5,) +
# facet_wrap(~location, scales = "fixed", nrow = 5) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Chemotherapy",
x = "Overall Survival (Months)",
y = "Density",
color = "Chemotherapy")
histo_age_hormo <- ggplot(cancer_new, aes(x = overall_survival_months, y = after_stat(density), fill = hormone_therapy)) +
geom_histogram(alpha=0.5, position="identity", binwidth = 5,) +
# facet_wrap(~location, scales = "fixed", nrow = 5) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Hormone Therapy",
x = "Overall Survival (Months)",
y = "Density",
color = "Hormone Therapy")
histo_age_radio <- ggplot(cancer_new, aes(x = overall_survival_months, y = after_stat(density), fill = radio_therapy)) +
geom_histogram(alpha=0.5, position="identity", binwidth = 5,) +
# facet_wrap(~location, scales = "fixed", nrow = 5) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Radio Therapy",
x = "Overall Survival (Months)",
y = "Density",
color = "Radio Therapy")
histo_age_tumor <- ggplot(cancer_new, aes(x = overall_survival_months, y = after_stat(density), fill = tumor_stage)) +
geom_histogram(alpha=0.5, position="identity", binwidth = 5,) +
# facet_wrap(~location, scales = "fixed", nrow = 5) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Tumor Stage",
x = "Overall Survival (Months)",
y = "Density",
color = "Tumor Stage")
histo_age_death <- ggplot(cancer_new, aes(x = overall_survival_months, y = after_stat(density), fill = death_from_cancer)) +
geom_histogram(alpha=0.5, position="identity", binwidth = 5,) +
# facet_wrap(~location, scales = "fixed", nrow = 5) +
theme(
text = element_text(size = 7),
plot.title = element_text(face = "bold"),
axis.title = element_text(face = "bold")
) +
labs(title = "Overall Survival against Age and Living Condition",
x = "Overall Survival (Months)",
y = "Density",
color = "Living Condition")
# grid.arrange(histo_age_chemo, histo_age_hormo, histo_age_radio)
# grid.arrange(histo_age_type, histo_age_tumor, histo_age_death)
# grid.arrange(histo_age_chemo, histo_age_hormo, nrow = 1)
# grid.arrange(histo_age_radio, histo_age_type, nrow = 1)
# grid.arrange(histo_age_tumor, histo_age_death, nrow = 1)
grid.arrange(histo_age_chemo, histo_age_hormo, ncol = 1)
grid.arrange(histo_age_radio, histo_age_type, ncol = 1)
grid.arrange(histo_age_tumor, histo_age_death, ncol = 1)
# histo_age_chemo
# histo_age_hormo
# histo_age_radio
# histo_age_type
# histo_age_tumor
# histo_age_death
# fullmod = lm(overall_survival_months ~ .*.,data=cancer_new)
fullformula = overall_survival_months ~ age_at_diagnosis + chemotherapy * hormone_therapy * radio_therapy + age_at_diagnosis : chemotherapy + age_at_diagnosis : hormone_therapy + age_at_diagnosis : radio_therapy + tumor_stage + tumor_stage : chemotherapy + tumor_stage : hormone_therapy + tumor_stage : radio_therapy + type_of_breast_surgery + death_from_cancer
# + death_from_cancer : chemotherapy + death_from_cancer : hormone_therapy + death_from_cancer : radio_therapy
fullmod = lm(fullformula, data=cancer_new)
summary(fullmod)
# finalmod_both = step(fullmod, direction = "both", trace = 1)
finalmod_both = step(fullmod, direction = "both", trace = 0)
summary(finalmod_both)
finalmod_backward = step(fullmod, direction = "backward", trace = 0)
summary(finalmod_backward)
nullmod = lm(overall_survival_months ~ 1, data = cancer_new)
finalmod_forward = step(nullmod, scope = list(lower = nullmod, upper = fullmod), direction = "forward", trace = 0)
summary(finalmod_forward)
# # Define the function for backward selection
# backward_selection <- function(data, formula) {
#   # Fit the full model
#   models <- list()
#   models[[1]] <- lm(formula, data = data)
#   # print(summary(models[[1]]))
#
#   # Perform backward selection
#   current_formula <- formula
#   model_index <- 2
#
#   while (TRUE) {
#     model <- lm(current_formula, data = data)
#
#     # Get p-values of the coefficients
#     p_values <- summary(model)$coefficients[, 4]
#
#     # Exclude the intercept
#     p_values <- p_values[-1]
#
#     # Check if any predictor has a p-value greater than 0.05
#     if (max(p_values, na.rm = TRUE) > 0.05) {
#       # Remove the predictor with the highest p-value
#       predictor_to_remove <- names(which.max(p_values))
#       current_formula <- update(current_formula, as.formula(paste(". ~ . -", predictor_to_remove)))
#
#       # Fit the new model
#       models[[model_index]] <- lm(current_formula, data = data)
#       # print(summary(models[[model_index]]))
#       model_index <- model_index + 1
#     } else {
#       # Stop if all predictors are significant
#       break
#     }
#   }
#
#   return(models)
# }
#
# finalmod2 = backward_selection(cancer_new, fullformula)
library(leaps)
finalmod_reg = regsubsets(fullformula, data=cancer_new, method="exhaustive", nvmax = length(attr(terms(fullformula), "term.labels")))
summary(finalmod_reg)
# Create the residual plot
# TODO
plot(finalmod_both$fitted.values, finalmod_both$residuals, xlab="Fitted Values", ylab="Residuals")
abline(a = 0, b = 0)
lines(lowess(finalmod_both$fitted.values, finalmod_both$residuals), col = "blue", lwd = 2)
qqnorm(finalmod_both$residuals)
qqline(finalmod_both$residuals)
# fullmod = lm(overall_survival_months ~ .*.,data=cancer_new)
fullformula = overall_survival_months ~ age_at_diagnosis + chemotherapy * hormone_therapy * radio_therapy + age_at_diagnosis : chemotherapy + age_at_diagnosis : hormone_therapy + age_at_diagnosis : radio_therapy + tumor_stage + tumor_stage : chemotherapy + tumor_stage : hormone_therapy + tumor_stage : radio_therapy + type_of_breast_surgery
# + death_from_cancer
# + death_from_cancer : chemotherapy + death_from_cancer : hormone_therapy + death_from_cancer : radio_therapy
fullmod = lm(fullformula, data=cancer_new)
summary(fullmod)
# finalmod_both = step(fullmod, direction = "both", trace = 1)
finalmod_both = step(fullmod, direction = "both", trace = 0)
summary(finalmod_both)
# fullmod = lm(overall_survival_months ~ .*.,data=cancer_new)
fullformula = overall_survival_months ~ age_at_diagnosis + chemotherapy * hormone_therapy * radio_therapy + age_at_diagnosis : chemotherapy + age_at_diagnosis : hormone_therapy + age_at_diagnosis : radio_therapy + tumor_stage + tumor_stage : chemotherapy + tumor_stage : hormone_therapy + tumor_stage : radio_therapy + type_of_breast_surgery
# + death_from_cancer
# + death_from_cancer : chemotherapy + death_from_cancer : hormone_therapy + death_from_cancer : radio_therapy
fullmod = lm(fullformula, data=cancer_new)
# summary(fullmod)
# finalmod_both = step(fullmod, direction = "both", trace = 1)
finalmod_both = step(fullmod, direction = "both", trace = 0)
summary(finalmod_both)
# fullmod = lm(overall_survival_months ~ .*.,data=cancer_new)
fullformula = overall_survival_months ~ age_at_diagnosis + chemotherapy * hormone_therapy * radio_therapy + age_at_diagnosis : chemotherapy + age_at_diagnosis : hormone_therapy + age_at_diagnosis : radio_therapy + tumor_stage + tumor_stage : chemotherapy + tumor_stage : hormone_therapy + tumor_stage : radio_therapy + type_of_breast_surgery + death_from_cancer
# + death_from_cancer : chemotherapy + death_from_cancer : hormone_therapy + death_from_cancer : radio_therapy
fullmod = lm(fullformula, data=cancer_new)
# summary(fullmod)
# finalmod_both = step(fullmod, direction = "both", trace = 1)
finalmod_both = step(fullmod, direction = "both", trace = 0)
summary(finalmod_both)
# Load the data
dose = c(1,2,4,8,16,32)
dead = c(3,7,17,25,32,37)
died = cbind(dead, 40-dead)
# Compute the maximal model estimates
( probs_max = dead / 40 )
# Compute the logistic model estimates
reg = glm(died~dose, family="binomial")
( probs_lr = predict(reg, data.frame(dose=c(1,2,4,8,16,32)), type="response") )
# Compute the observed log-likelihood for the maximal mode and the logistic model
# sum(dbinom(y, n, pi, log=TRUE))
# Compute the difference in the observed log-likelihoods
# TODO
# Compute the AICs for the maximal and logistic models
# TODO
# Load the data
cards = c(8,3,5,3,10,7,2,2,4,3)
mean(cards)
# Visualize the Poisson probability mass function
x = 0:15
prob = dpois(x, 4.7)
barplot(prob, names.arg=x, main="Pois(lambda=4.7) PMF",
xlab="Number of red cards Y", ylab="Pr(Y)")
# Compute the observed log-likelihood for the maximal mode and the logistic model
sum(dbinom(y, n, pi, log=TRUE))
# Compute the observed log-likelihood for the maximal mode and the logistic model
y = dead
n = 40
pi = probs_max
sum(dbinom(y, n, pi, log=TRUE))
# Compute the observed log-likelihood for the maximal mode and the logistic model
log_max = sum(dbinom(dead, 40, pi_max, log=TRUE))
# Load the data
dose = c(1,2,4,8,16,32)
dead = c(3,7,17,25,32,37)
died = cbind(dead, 40-dead)
# Compute the maximal model estimates
pi_max = ( probs_max = dead / 40 )
# Compute the logistic model estimates
reg = glm(died~dose, family="binomial")
pi_logit = ( probs_lr = predict(reg, data.frame(dose=c(1,2,4,8,16,32)), type="response") )
# Compute the observed log-likelihood for the maximal mode and the logistic model
log_max = sum(dbinom(dead, 40, pi_max, log=TRUE))
log_max
log_logit = sum(dbinom(dead, 40, pi_logit, log=TRUE))
log_logit
# Compute the difference in the observed log-likelihoods
# TODO
log_max - log_logit
# Load the data
dose = c(1,2,4,8,16,32)
dead = c(3,7,17,25,32,37)
died = cbind(dead, 40-dead)
# Compute the maximal model estimates
probs_max = dead / 40
# Compute the logistic model estimates
reg = glm(died~dose, family="binomial")
probs_lr = predict(reg, data.frame(dose=c(1,2,4,8,16,32)), type="response")
# Compute the observed log-likelihood for the maximal mode and the logistic model
log_max = sum(dbinom(dead, 40, probs_max, log=TRUE))
log_max
log_logit = sum(dbinom(dead, 40, probs_lr, log=TRUE))
log_logit
# Compute the AICs for the maximal and logistic models
# TODO
aic_max = -2(log_max - 6)
# Compute the observed log-likelihood for the maximal mode and the logistic model
log_max = sum(dbinom(dead, 40, probs_max, log=TRUE))
log_max
log_logit = sum(dbinom(dead, 40, probs_lr, log=TRUE))
log_logit
# Compute the AICs for the maximal and logistic models
# TODO
aic_max = -2*(log_max - 6)
aic_max
aic_logit = -2*(log_logit - 2)
aic_logit
# Compute the AICs for the maximal and logistic models
# TODO
( aic_max = -2*(log_max - 6) )
( aic_logit = -2*(log_logit - 2) )
